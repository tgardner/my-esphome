substitutions:
  comment: Shelly Dimmer 2
  max_temp: "70" # °C

packages:
  common: !include ../common/base.yaml

esp8266:
  board: esp01_1m

uart:
  tx_pin: 1
  rx_pin: 3
  baud_rate: 115200

sensor: #Important: don't change this sensor-part unless you know what you are doing. These sensors will shut the light down when overheating temperature is reached.
  # NTC Temperature
  - platform: ntc
    sensor: temp_resistance_reading
    name: Temperature
    id: temperature
    unit_of_measurement: "°C"
    accuracy_decimals: 1
    icon: "mdi:thermometer"
    calibration:
      b_constant: 3350
      reference_resistance: 10kOhm
      reference_temperature: 298.15K
    on_value:
      then:
        - if:
            condition:
              - sensor.in_range:
                  id: temperature
                  above: ${max_temp}
              - light.is_on: dimmer
            then:
              - light.turn_off:
                  id: dimmer
              - logger.log: "Switch turned off because temperature exceeded ${max_temp}°C"
              - homeassistant.service:
                  service: persistent_notification.create
                  data:
                    title: Message from ${device_name}
                  data_template:
                    message: Switch turned off because temperature exceeded ${max_temp}°C
    on_value_range:
      - above: ${max_temp}
        then:
          - logger.log: "Temperature exceeded ${max_temp}°C"
          - homeassistant.service:
              service: persistent_notification.create
              data:
                title: Message from ${device_name}
              data_template:
                message: Temperature exceeded ${max_temp}°C
  - platform: resistance
    id: temp_resistance_reading
    sensor: temp_analog_reading
    configuration: DOWNSTREAM
    resistor: 32kOhm
  - platform: adc
    id: temp_analog_reading
    pin: A0

  - platform: total_daily_energy
    name: "Daily Energy"
    power_id: power_dimmer
    filters:
      # Multiplication factor from W to kW is 0.001
      - multiply: 0.001
    unit_of_measurement: kWh

light:
  - platform: shelly_dimmer
    name: Dimmer
    id: dimmer
    icon: mdi:lightbulb
    power:
      name: "Power"
      id: power_dimmer
    voltage:
      name: "Voltage"
    current:
      name: "Current"
    min_brightness: 100
    max_brightness: 1000
    firmware:
      version: "51.7"
      update: true

binary_sensor:
  - platform: gpio
    name: "Switch 1"
    id: light_switch
    pin:
      number: GPIO14
      mode: INPUT
    internal: true
    filters:
      - delayed_on_off: 50ms
    on_multi_click:
      # single click
      - timing:
          - ON for at most 1s
          - OFF for at least 0.5s
        then:
          - logger.log: "Single-Clicked"
          - light.toggle: dimmer

      # double click
      - timing:
          - ON for at most 0.5s
          - OFF for at most 0.5s
          - ON for at most 0.5s
          - OFF for at least 0.2s
        then:
          - logger.log: "Double-Clicked"
          - light.turn_on:
              id: dimmer
              brightness: 100%

      # triple click
      - timing:
          - ON for at most 0.5s
          - OFF for at most 0.5s
          - ON for at most 0.5s
          - OFF for at most 0.5s
          - ON for at most 0.5s
          - OFF for at least 0.2s
        then:
          - logger.log: "Triple-Clicked"
          - light.turn_on:
              id: dimmer
              brightness: 10%

      # Press and Hold button
      - timing:
          - ON for at most 0.5s
          - OFF for at least 0.1s
          - ON for at least 1s
        then:
          - logger.log: "Press and Hold - Dim DOWN"
          - while:
              condition:
                and:
                  - binary_sensor.is_on: light_switch
                  - lambda: "return(id(dimmer).remote_values.get_brightness() >= 0.01);"
              then:
                - light.dim_relative:
                    id: dimmer
                    relative_brightness: -1%
                    transition_length: 0.01s
                - delay: 0.01s

      # Hold button
      - timing:
          - ON for at least 1s
        then:
          - logger.log: "Hold - Dim UP"
          - while:
              condition:
                and:
                  - binary_sensor.is_on: light_switch
                  - lambda: "return(id(dimmer).remote_values.get_brightness() <= 0.999);"
              then:
                - light.dim_relative:
                    id: dimmer
                    relative_brightness: +1%
                    transition_length: 0.01s
                - delay: 0.01s
