substitutions:
  comment: Shelly 2.5
  max_power: "2000.0"
  max_temp: "80.0"
  channel_1: "Channel 1"
  channel_2: "Channel 2"

packages:
  common: !include ../common/base.yaml

esp8266:
  board: esp01_1m

i2c:
  sda: GPIO12
  scl: GPIO14

sensor:
- platform: ade7953
  irq_pin: GPIO16 # Prevent overheating by setting this
  voltage:
    name: Voltage
  # On the Shelly 2.5 channels are mixed ch1=B ch2=A
  current_a:
    name: ${channel_2} Current
    internal: true
  current_b:
    name: ${channel_1} Current
    internal: true
  active_power_a:
    name: ${channel_2} Power
    id: power_channel_2
    # active_power_a is normal, so don't multiply by -1
    on_value_range:
    - above: ${max_power}
      then:
      - light.turn_off: lightid2
      - homeassistant.service:
          service: persistent_notification.create
          data:
            title: Message from ${device_name}
          data_template:
            message: Switch turned off because power exceeded ${max_power}W
  active_power_b:
    name: ${channel_1} Power
    id: power_channel_1
    # active_power_b is inverted, so take the absolute value
    filters:
    - lambda: return abs(x);
    on_value_range:
    - above: ${max_power}
      then:
      - light.turn_off: lightid1
      - homeassistant.service:
          service: persistent_notification.create
          data:
            title: Message from ${device_name}
          data_template:
            message: Switch turned off because power exceeded ${max_power}W
  update_interval: 30s

- platform: total_daily_energy
  name: ${channel_1} Energy
  power_id: power_channel_1
  filters:
  # Multiplication factor from W to kWh is 0.001
  - multiply: 0.001
  unit_of_measurement: kWh

- platform: total_daily_energy
  name: ${channel_2} Energy
  power_id: power_channel_2
  filters:
  # Multiplication factor from W to kWh is 0.001
  - multiply: 0.001
  unit_of_measurement: kWh

# NTC Temperature
- platform: ntc
  sensor: temp_resistance_reading
  name: Temperature
  unit_of_measurement: "°C"
  accuracy_decimals: 1
  icon: "mdi:thermometer"
  calibration:
    b_constant: 3350
    reference_resistance: 10kOhm
    reference_temperature: 298.15K
  on_value_range:
  - above: ${max_temp}
    then:
    - light.turn_off: lightid1
    - light.turn_off: lightid2
    - homeassistant.service:
        service: persistent_notification.create
        data:
          title: Message from ${device_name}
        data_template:
          message: Switch turned off because temperature exceeded ${max_temp}°C
- platform: resistance
  id: temp_resistance_reading
  sensor: temp_analog_reading
  configuration: DOWNSTREAM
  resistor: 32kOhm
- platform: adc
  id: temp_analog_reading
  pin: A0

status_led:
  pin:
    number: GPIO0
    inverted: yes

output:
- platform: gpio
  pin: GPIO4
  id: shelly_25_relay_1
- platform: gpio
  pin: GPIO15
  id: shelly_25_relay_2

light:
- platform: binary
  name: "${channel_1}"
  output: shelly_25_relay_1
  id: lightid1
- platform: binary
  name: "${channel_2}"
  output: shelly_25_relay_2
  id: lightid2

binary_sensor:
- platform: gpio
  pin:
    number: GPIO13
  name: "${channel_1} input"
  internal: true
  on_state:
    then:
    - light.toggle: lightid1
- platform: gpio
  pin:
    number: GPIO5
  name: "${channel_2} input"
  internal: true
  on_state:
    then:
    - light.toggle: lightid2
# https://simplyexplained.com/blog/shelly25-esphome-potential-fire-hazard-fix/
# Prevent short circuit with "floating" pin!
- platform: gpio
  pin: GPIO16
  name: "ade7953 IRQ pin"
  internal: true
